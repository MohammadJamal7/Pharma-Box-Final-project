@model Graduation_Project.ViewModels.BranchMedicationViewModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>sales report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
    <style>
        @@import url("https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap");

        :root {
            --header-height: 3rem;
            --nav-width: 68px;
            --first-color: #6f42c1;
            --first-color-light: #AFA5D9;
            --white-color: #F7F6FB;
            --body-font: 'Nunito', sans-serif;
            --normal-font-size: 1rem;
            --z-fixed: 100;
        }

        *, ::before, ::after {
            box-sizing: border-box;
        }

        .outlined-purple {
            border: 1px solid #6f42c1;
            color: #5a379d;
        }

            .outlined-purple:hover {
                background-color: #6f42c1;
                color: white;
            }

        body {
            position: relative;
            margin: var(--header-height) 0 0 0;
            padding: 0 1rem;
            font-family: var(--body-font);
            font-size: var(--normal-font-size);
            transition: .5s;
        }

        a {
            text-decoration: none;
        }

        .header {
            width: 100%;
            height: var(--header-height);
            position: fixed;
            top: 0;
            left: 0;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 1rem;
            background-color: var(--white-color);
            z-index: var(--z-fixed);
            transition: .5s;
        }

        .header_toggle {
            color: var(--first-color);
            font-size: 1.5rem;
            cursor: pointer;
        }

        .header_img {
            width: 35px;
            height: 35px;
            display: flex;
            justify-content: center;
            border-radius: 50%;
            overflow: hidden;
        }

            .header_img img {
                width: 40px;
            }

        .l-navbar {
            position: fixed;
            top: 0;
            left: -30%;
            width: var(--nav-width);
            height: 100vh;
            background-color: var(--first-color);
            padding: .5rem 1rem 0 0;
            transition: .5s;
            z-index: var(--z-fixed);
        }

        .nav {
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            overflow: hidden;
        }

        .nav_logo, .nav_link {
            display: grid;
            grid-template-columns: max-content max-content;
            align-items: center;
            column-gap: 1rem;
            padding: .5rem 0 .5rem 1.5rem;
        }

        .nav_logo {
            margin-bottom: 2rem;
        }

        .nav_logo-icon {
            font-size: 1.25rem;
            color: var(--white-color);
        }

        .nav_logo-name {
            color: var(--white-color);
            font-weight: 700;
        }

        .nav_link {
            position: relative;
            color: var(--first-color-light);
            margin-bottom: 1.5rem;
            transition: .3s;
        }

            .nav_link:hover {
                color: var(--white-color);
            }

        .nav_icon {
            font-size: 1.25rem;
        }

        .show {
            left: 0;
        }

        .body-pd {
            padding-left: calc(var(--nav-width) + 1rem);
        }

        .active {
            color: var(--white-color);
        }

            .active::before {
                content: '';
                position: absolute;
                left: 0;
                width: 2px;
                height: 32px;
                background-color: var(--white-color);
            }

        .height-100 {
            height: 100vh;
        }

        .search-bar {
            max-width: 400px;
            margin-bottom: 20px;
        }

        .supplier-header h4 {
            font-weight: bold;
        }

        .supplier-header span {
            color: #6c757d;
        }

        .table-container {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .btn-view {
            background-color: #d0b2f4;
            border: none;
            border-radius: 20px;
            color: #fff;
            padding: 5px 15px;
            font-weight: bold;
        }

            .btn-view:hover {
                background-color: #b48cf2;
            }
        /* .user-nav {
                    display: flex;
                    gap: 1rem;
                }

                .user-nav .nav-link {
                    color: #6c757d;
                    padding: 0.5rem 1rem;
                    border-radius: 0.25rem;
                    transition: all 0.2s;
                }

                .user-nav .nav-link:hover {
                    background-color: #f8f9fa;
                }

                .user-nav .nav-link.active {
                    color: var(--first-color) !important;
                    font-weight: 500;
                } */

        @@media screen and (min-width: 768px) {
            body {
                margin: calc(var(--header-height) + 1rem) 0 0 0;
                padding-left: calc(var(--nav-width) + 2rem);
            }

            .header {
                height: calc(var(--header-height) + 1rem);
                padding: 0 2rem 0 calc(var(--nav-width) + 2rem);
            }

            .header_img {
                width: 40px;
                height: 40px;
            }

                .header_img img {
                    width: 45px;
                }

            .l-navbar {
                left: 0;
                padding: 1rem 1rem 0 0;
            }

            .show {
                width: calc(var(--nav-width) + 156px);
            }

            .body-pd {
                padding-left: calc(var(--nav-width) + 188px);
            }
        }
    </style>
</head>
<body id="body-pd">

    <header class="header" id="header">

        <div class="header_toggle"> <i class='bx bx-menu' id="header-toggle"></i> </div>
        <div class="header_img"> <img src="../../MainAssets/logo-color.png" alt=""> </div>
    </header>
    <div class="l-navbar" id="nav-bar">
        <nav class="nav">
            <div>
                <div class="ms-3">
                    <a href="../location-sec/index.html" class="nav_link text-white ps-2">
                        <i class="fa-solid fa-user"></i>
                        <span class="nav_loc-name">Branch Name</span>
                    </a>
                </div>
                <br />
                <div class="nav_list">
                    <a href="@Url.Action("Overview")" class="nav_link ">
                        <i class="fa-sharp fa-solid fa-table-columns"></i>
                        <span class="nav_name ">Overview</span>
                    </a>
                    <a href="@Url.Action("Inventory")" class="nav_link ">
                        <i class="fa-solid fa-boxes-stacked"></i>
                        <span class="nav_name">Inventory</span>
                    </a>

                    <a href="@Url.Action("Medications")" class="nav_link">
                        <i class="fa-solid fa-grip"></i>
                        <span class="nav_name">Medications</span>
                    </a>
                    <a href="@Url.Action("GroupsOfMedicines")" class="nav_link">
                        <i class="fa-solid fa-grip"></i>
                        <span class="nav_name">Medicine Groups</span>
                    </a>

                    <a href="@Url.Action("Suppliers")" class="nav_link">
                        <i class="fa-solid fa-arrow-trend-up"></i>
                        <span class="nav_name">Suppliers</span>
                    </a>
                    <a href="@Url.Action("Orders")" class="nav_link">
                        <i class="fa-solid fa-arrow-down-9-1"></i>
                        <span class="nav_name"> Orders</span>
                    </a>

                    <a href="../Notification-sec/index.html" class="nav_link">
                        <i class="fa-regular fa-bell"></i>
                        <span class="nav_name">Notifications</span>
                    </a>
                    <a href="@Url.Action("Branches")" class="nav_link">
                        <i class="fa-solid fa-code-branch"></i>
                        <span class="nav_name">Branchs</span>
                    </a>

                    <a href="@Url.Action("LogOut")" class="nav_link">
                        <i class="fa-solid fa-right-from-bracket"></i>
                        <span class="nav_name">Log Out</span>
                    </a>
                </div>
            </div>
        </nav>
    </div>


    <div class="container mt-5">
        <h2 class="fw-bold">Suppliers &gt; <span class="text-primary">@Model.branch.Name</span></h2>
        <p>List of medicines groups.</p>


        <div class="search-bar d-flex justify-content-end">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search for anything here..">
                <button class="btn btn-outline-secondary" type="button"><i class="fas fa-search"></i></button>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <div class="table-container">
                    <table class="table table-borderless align-middle">
                        <thead>
                            <tr>
                                <th scope="col">Medicine Name</th>
                                <th scope="col">In Stock</th>
                             
                                <th scope="col">Expiration Date</th>
                               
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var medication in Model.medicines)
                            {
                                <tr>
                                    <td>@medication.Name</td>
                                    <td>@medication.StockQuantity</td>
                                    <td>@medication.ExpiryDate.ToString("dd/MM/yyyy")</td>
                                   
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        function addToCart(medicationId, supplierId, medicationName) {
            let quantityInput = document.getElementById(`quantity-${medicationId}`);
            let quantity = quantityInput ? parseInt(quantityInput.value) : 1;

            // Validate quantity
            if (quantity <= 0) {
                alert("Quantity must be greater than 0.");
                return;
            }

            $.ajax({
                url: '/PharmCart/AddToCart',
                type: 'POST',
                data: {
                    medicationId: medicationId,
                    quantity: quantity,
                    supplierId: supplierId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    if (response.success) {
                        alert(`${quantity} of "${medicationName}" added to your cart.`);
                        // Optional: Update cart display or trigger cart refresh
                    } else if (response.needsConfirmation) {
                        // Prompt user to clear existing cart
                        if (confirm(response.message)) {
                            // If user confirms, clear cart and add new item
                            $.ajax({
                                url: '/PharmCart/ClearCartAndChangeSupplier',
                                type: 'POST',
                                data: {
                                    medicationId: medicationId,
                                    quantity: quantity,
                                    supplierId: supplierId,
                                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                                },
                                success: function (clearResponse) {
                                    if (clearResponse.success) {
                                        alert(`${quantity} of "${medicationName}" added to your cart after clearing previous items.`);
                                        // Optional: Update cart display or trigger cart refresh
                                    } else {
                                        alert(clearResponse.message || "Failed to clear cart and add item.");
                                    }
                                },
                                error: function (xhr, status, error) {
                                    console.error('Error clearing cart:', error);
                                    alert("An error occurred while clearing the cart.");
                                }
                            });
                        }
                    } else {
                        alert(response.message || "Failed to add item to cart");
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                    alert("An error occurred while adding the item to the cart.");
                }
            });
        }

        document.addEventListener("DOMContentLoaded", function (event) {
            const showNavbar = (toggleId, navId, bodyId, headerId) => {
                const toggle = document.getElementById(toggleId),
                    nav = document.getElementById(navId),
                    bodypd = document.getElementById(bodyId),
                    headerpd = document.getElementById(headerId);

                if (toggle && nav && bodypd && headerpd) {
                    toggle.addEventListener('click', () => {
                        nav.classList.toggle('show');
                        toggle.classList.toggle('bx-x');
                        bodypd.classList.toggle('body-pd');
                        headerpd.classList.toggle('body-pd');
                    });
                }
            };

            showNavbar('header-toggle', 'nav-bar', 'body-pd', 'header');

            const linkColor = document.querySelectorAll('.nav_link');

            function colorLink() {
                if (linkColor) {
                    linkColor.forEach(l => l.classList.remove('active'));
                    this.classList.add('active');
                }
            }
            linkColor.forEach(l => l.addEventListener('click', colorLink));

            // Add click handling for user management navigation
            const userNavLinks = document.querySelectorAll('.user-nav .nav-link');
            userNavLinks.forEach(link => {
                link.addEventListener('click', function (e) {
                    userNavLinks.forEach(l => l.classList.remove('active'));
                    this.classList.add('active');
                });
            });
        });

    </script>

    @Html.AntiForgeryToken()
</body>
</html>





