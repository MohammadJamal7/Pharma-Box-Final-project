@{
    Layout = null;
}
@{
    ViewData["Title"] = "Supplier Orders Management";
}
@model IEnumerable<SupplierOrderViewModel>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>sales report</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
    <style>
        @@import url("https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap");

        :root {
            --header-height: 3rem;
            --nav-width: 68px;
            --first-color: #6f42c1;
            --first-color-light: #AFA5D9;
            --white-color: #F7F6FB;
            --body-font: 'Nunito', sans-serif;
            --normal-font-size: 1rem;
            --z-fixed: 100;
        }

        *, ::before, ::after {
            box-sizing: border-box;
        }

        .outlined-purple {
            border: 1px solid #6f42c1;
            color: #5a379d;
        }

            .outlined-purple:hover {
                background-color: #6f42c1;
                color: white;
            }

        body {
            position: relative;
            margin: var(--header-height) 0 0 0;
            padding: 0 1rem;
            font-family: var(--body-font);
            font-size: var(--normal-font-size);
            transition: .5s;
        }

        a {
            text-decoration: none;
        }

        .header {
            width: 100%;
            height: var(--header-height);
            position: fixed;
            top: 0;
            left: 0;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 1rem;
            background-color: var(--white-color);
            z-index: var(--z-fixed);
            transition: .5s;
        }

        .header_toggle {
            color: var(--first-color);
            font-size: 1.5rem;
            cursor: pointer;
        }

        .header_img {
            width: 35px;
            height: 35px;
            display: flex;
            justify-content: center;
            border-radius: 50%;
            overflow: hidden;
        }

            .header_img img {
                width: 40px;
            }

        .l-navbar {
            position: fixed;
            top: 0;
            left: -30%;
            width: var(--nav-width);
            height: 100vh;
            background-color: var(--first-color);
            padding: .5rem 1rem 0 0;
            transition: .5s;
            z-index: var(--z-fixed);
        }

        .nav {
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            overflow: hidden;
        }

        .nav_logo, .nav_link {
            display: grid;
            grid-template-columns: max-content max-content;
            align-items: center;
            column-gap: 1rem;
            padding: .5rem 0 .5rem 1.5rem;
        }

        .nav_logo {
            margin-bottom: 2rem;
        }

        .nav_logo-icon {
            font-size: 1.25rem;
            color: var(--white-color);
        }

        .nav_logo-name {
            color: var(--white-color);
            font-weight: 700;
        }

        .nav_link {
            position: relative;
            color: var(--first-color-light);
            margin-bottom: 1.5rem;
            transition: .3s;
        }

            .nav_link:hover {
                color: var(--white-color);
            }

        .nav_icon {
            font-size: 1.25rem;
        }

        .show {
            left: 0;
        }

        .body-pd {
            padding-left: calc(var(--nav-width) + 1rem);
        }

        .active {
            color: var(--white-color);
        }

            .active::before {
                content: '';
                position: absolute;
                left: 0;
                width: 2px;
                height: 32px;
                background-color: var(--white-color);
            }

        .height-100 {
            height: 100vh;
        }

        .search-bar {
            max-width: 400px;
            margin-bottom: 20px;
        }

        .page-header h5 {
            font-weight: bold;
        }

        .page-header span {
            color: #6c757d;
        }

        .table-container {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .table thead th {
            font-weight: bold;
        }

        .fa-solid {
            color: #B197FC;
            font-size: 1.2rem;
            cursor: pointer;
        }

            .fa-solid:hover {
                color: #600946;
            }
        /* .user-nav {
                                   display: flex;
                                   gap: 1rem;
                               }

                               .user-nav .nav-link {
                                   color: #6c757d;
                                   padding: 0.5rem 1rem;
                                   border-radius: 0.25rem;
                                   transition: all 0.2s;
                               }

                               .user-nav .nav-link:hover {
                                   background-color: #f8f9fa;
                               }

                               .user-nav .nav-link.active {
                                   color: var(--first-color) !important;
                                   font-weight: 500;
                               } */

        @@media screen and (min-width: 768px) {
            body {
                margin: calc(var(--header-height) + 1rem) 0 0 0;
                padding-left: calc(var(--nav-width) + 2rem);
            }

            .header {
                height: calc(var(--header-height) + 1rem);
                padding: 0 2rem 0 calc(var(--nav-width) + 2rem);
            }

            .header_img {
                width: 40px;
                height: 40px;
            }

                .header_img img {
                    width: 45px;
                }

            .l-navbar {
                left: 0;
                padding: 1rem 1rem 0 0;
            }

            .show {
                width: calc(var(--nav-width) + 156px);
            }

            .body-pd {
                padding-left: calc(var(--nav-width) + 188px);
            }
        }
    </style>
</head>
<body id="body-pd">
    <header class="header" id="header">

        <div class="header_toggle"> <i class='bx bx-menu' id="header-toggle"></i> </div>
        <div class="header_img"> <img src="../../MainAssets/logo-color.png" alt=""> </div>
    </header>
    <div class="l-navbar" id="nav-bar">
        <nav class="nav">
            <div>
                <div class="ms-3">
                    <a href="../location-sec/index.html" class="nav_link  text-white ps-2">
                        <i class="fa-solid fa-user"></i>
                        <span class="nav_loc-name">
                            Supplier
                        </span>
                    </a>
                </div>
                <div class="nav_list">
                    <a href="@Url.Action("OverView")" class="nav_link ">
                        <i class="fa-sharp fa-solid fa-table-columns"></i>
                        <span class="nav_name ">OverView</span>

                    </a>
                    <a href="@Url.Action("Medicines")" class="nav_link  ">
                        <i class="fa-solid fa-capsules"></i>
                        <span class="nav_name">Medications</span>
                    </a>
                    <a href="@Url.Action("DisplayOrders")" class="nav_link active">
                        <i class="fa-solid fa-cart-shopping"></i>
                        <span class="nav_name">Orders</span>
                    </a>

                    <a href="@Url.Action("LogOut")" class="nav_link">
                        <i class="fa-solid fa-right-from-bracket"></i>
                        <span class="nav_name">Log Out</span>
                    </a>

                </div>
            </div>
        </nav>
    </div>




    <div class="container mt-5" style="margin-top:50px">
        <div class="container-fluid">
            <h2 class="mb-4" style="color: #3B1E54;">@ViewData["Title"]</h2>

            @if (Model.Any())
            {
                <!-- Pending Orders Section -->
                <div class="card mb-4">
                    <div class="card-header" style="background-color: #3B1E54; color: white;">
                        <h3 class="mb-0">Pending Orders</h3>
                    </div>
                    <div class="card-body">
                        @if (Model.Any(o => o.orderStatus == "Pending"))
                        {
                            <table class="table table-hover table-striped">
                                <thead style="background-color: #f7f7f7; color: #3B1E54;">
                                    <tr>
                                        <th>Order ID</th>
                                        <th>Order Date</th>
                                        <th>Branch</th>
                                        <th>Total Items</th>
                                        <th>Estimated Total</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="pending-orders">
                                    @foreach (var order in Model.Where(o => o.orderStatus == "Pending"))
                                    {
                                        <tr id="order-@order.OrderId" class="align-middle">
                                            <td>@order.OrderId</td>
                                            <td>@order.OrderDate.ToString("MM/dd/yyyy")</td>
                                            <td>@order.BranchName</td>
                                            <td>@order.OrderItems.Count</td>
                                            <td>$@order.OrderItems.Sum(item => item.Total).ToString("F2")</td>
                                            <td>
                                                <div class="d-flex">
                                                    <a asp-action="OrderDetails" asp-route-id="@order.OrderId" class="btn btn-info btn-sm">
                                                        <i class="fas fa-info-circle"></i> Details
                                                    </a>
                                                    <button style="background-color: #3B1E54; color: white;"
                                                            class="btn-sm me-2 accept-order" data-order-id="@order.OrderId">
                                                        <i class="fas fa-check"></i> Accept
                                                    </button>
                                                    <button class="btn btn-danger btn-sm reject-order" data-order-id="@order.OrderId">
                                                        <i class="fas fa-times"></i> Reject
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <div class="alert alert-info">No pending orders at the moment.</div>
                        }
                    </div>
                </div>

                <!-- Confirmed Orders Section -->
                <div class="card mb-4">
                    <div class="card-header" style="background-color: #3B1E54; color: white;">
                        <h3 class="mb-0">Confirmed Orders</h3>
                    </div>
                    <div class="card-body">
                        @if (Model.Any(o => o.orderStatus == "Confirmed" || o.orderStatus == "Preparing" || o.orderStatus == "Delivered"))
                        {
                            <table class="table table-hover table-striped">
                                <thead style="background-color: #f7f7f7; color: #3B1E54;">
                                    <tr>
                                        <th>Order ID</th>
                                        <th>Order Date</th>
                                        <th>Branch</th>
                                        <th>Total Items</th>
                                        <th>Total Price</th>
                                        <th>Order Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="confirmed-orders">
                                    @foreach (var order in Model.Where(o => o.orderStatus == "Confirmed" || o.orderStatus == "Preparing" || o.orderStatus == "Delivered"))
                                    {
                                        <tr id="confirmed-order-@order.OrderId" class="align-middle">
                                            <td>@order.OrderId</td>
                                            <td>@order.OrderDate.ToString("MM/dd/yyyy")</td>
                                            <td>@order.BranchName</td>
                                            <td>@order.OrderItems.Count</td>
                                            <td>$@order.OrderItems.Sum(item => item.Total).ToString("F2")</td>
                                            <td>@order.orderStatus</td>
                                            <td>
                                                <a asp-action="OrderDetails" asp-route-id="@order.OrderId" class="btn btn-info btn-sm">
                                                    <i class="fas fa-info-circle"></i> Details
                                                </a>
                                                
                                                @if (order.orderStatus == "Delivered")
                                                {
                                                    <span class="text-success delivered-badge">Delivered</span>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-success btn-sm deliver-order ps-2" data-order-id="@order.OrderId">
                                                        <i class="fa-solid fa-check"></i> Delivered
                                                    </button>
                                                }

                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <div class="alert alert-info">No confirmed orders yet.</div>
                        }
                    </div>
                </div>

                <!-- Rejected Orders Section -->
                <div class="card">
                    <div class="card-header" style="background-color: #d9534f; color: white;">
                        <h3 class="mb-0">Rejected Orders</h3>
                    </div>
                    <div class="card-body">
                        @if (Model.Any(o => o.orderStatus == "Rejected"))
                        {
                            <table class="table table-hover table-striped">
                                <thead style="background-color: #f7f7f7; color: #3B1E54;">
                                    <tr>
                                        <th>Order ID</th>
                                        <th>Order Date</th>
                                        <th>Branch</th>
                                        <th>Total Items</th>
                                        <th>Estimated Total</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="rejected-orders">
                                    @foreach (var order in Model.Where(o => o.orderStatus == "Rejected"))
                                    {
                                        <tr id="rejected-order-@order.OrderId" class="align-middle">
                                            <td>@order.OrderId</td>
                                            <td>@order.OrderDate.ToString("MM/dd/yyyy")</td>
                                            <td>@order.BranchName</td>
                                            <td>@order.OrderItems.Count</td>
                                            <td>$@order.OrderItems.Sum(item => item.Total).ToString("F2")</td>
                                            <td>
                                                <a asp-action="OrderDetails" asp-route-id="@order.OrderId" class="btn btn-info btn-sm">
                                                    <i class="fas fa-info-circle"></i> Details
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <div class="alert alert-info">No rejected orders.</div>
                        }
                    </div>
                </div>

            
            }
            else
            {
                <div class="alert alert-info">No orders found.</div>
            }


        </div>

        <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

                  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
        <script>
            document.addEventListener("DOMContentLoaded", function(event) {
                const showNavbar = (toggleId, navId, bodyId, headerId) => {
                    const toggle = document.getElementById(toggleId),
                          nav = document.getElementById(navId),
                          bodypd = document.getElementById(bodyId),
                          headerpd = document.getElementById(headerId);

                    if (toggle && nav && bodypd && headerpd) {
                        toggle.addEventListener('click', () => {
                            nav.classList.toggle('show');
                            toggle.classList.toggle('bx-x');
                            bodypd.classList.toggle('body-pd');
                            headerpd.classList.toggle('body-pd');
                        });    }
                };

                showNavbar('header-toggle', 'nav-bar', 'body-pd', 'header');

                const linkColor = document.querySelectorAll('.nav_link');

                function colorLink() {
                    if (linkColor) {
                        linkColor.forEach(l => l.classList.remove('active'));
                        this.classList.add('active');
                    }
                }
                linkColor.forEach(l => l.addEventListener('click', colorLink));

                // Add click handling for user management navigation
                const userNavLinks = document.querySelectorAll('.user-nav .nav-link');
                userNavLinks.forEach(link => {
                    link.addEventListener('click', function(e) {
                        userNavLinks.forEach(l => l.classList.remove('active'));
                        this.classList.add('active');
                    });
                });
            });



                $(document).ready(function () {
                        var orderDetails = @Json.Serialize(Model.Select(order => new
                        {
                            orderId = order.OrderId,
                            branchName = order.BranchName,
                            orderDate = order.OrderDate.ToString("MM/dd/yyyy"),
                            items = order.OrderItems.Select(item => new
                            {
                                name = item.MedicationName,
                                quantity = item.Quantity,
                                total = item.Total
                            }),
                            totalPrice = order.OrderItems.Sum(item => item.Total)
                        }));

                // Details Modal Handler
                $('.details-order').on('click', function () {
                            var orderId = $(this).data('order-id');
                            var order = orderDetails.find(o => o.orderId === orderId);

                $('#modalOrderId').text(orderId);
                $('#modalBranchName').text(order.branchName);
                $('#modalOrderDate').text(order.orderDate);
                $('#modalTotalPrice').text(order.totalPrice.toFixed(2));

                var itemsHtml = '<table class="table table-bordered"><thead><tr><th>Medication</th><th>Quantity</th><th>Item Total</th></tr></thead><tbody>';
                    order.items.forEach(function (item) {
                        itemsHtml += '<tr>' +
                        '<td>' + item.name + '</td>' +
                        '<td>' + item.quantity + '</td>' +
                        '<td>$' + item.total.toFixed(2) + '</td>' +
                        '</tr>';
                            });
                    itemsHtml += '</tbody></table>';

                $('#orderItemsContainer').html(itemsHtml);
                new bootstrap.Modal(document.getElementById('orderDetailsModal')).show();
                        });

                           // Accept Order Handler
            $('.accept-order').on('click', function () {
                var orderId = $(this).data('order-id');

                $.ajax({
                    url: '@Url.Action("AcceptOrder", "Supplier")',
                    type: 'POST',
                    data: { id: orderId },
                    success: function (response) {
                        // Check if the response indicates success
                        if (response.success) {
                            // Remove the order from the DOM and reload the page
                            $('#order-' + orderId).remove();
                            location.reload(); // Reload to reflect changes
                        } else {
                            // If success is false, show the error message returned from the server
                            alert(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        $('#order-' + orderId).remove();
                            location.reload();
                    }
                });
            });

                // Reject Order Handler
                $('.reject-order').on('click', function () {
                            var orderId = $(this).data('order-id');
                $.ajax({
                    url: '@Url.Action("RejectOrder", "Supplier")',
                type: 'POST',
                data: {id: orderId },
                success: function (response) {
                                    if (response.success) {
                    $('#order-' + orderId).remove();
                location.reload(); // Reload to reflect changes
                                    } else {
                    alert(response.message);
                                    }
                                },
                error: function () {
                    alert('Error rejecting the order.');
                                }
                            }); 
                        });
                    });

                               var token = $('input[name="__RequestVerificationToken"]').val();

                       $('.deliver-order').on('click', function () {
                var orderId = $(this).data('order-id');
                console.log("Delivering order with ID:", orderId);

                $.ajax({
                    url: '@Url.Action("DeliverOrder", "Supplier")',
                    type: 'POST',
                    data: { id: orderId },
                    success: function (response) {
                        console.log(response);  // Check the server response
                        if (response.success) {
                            var row = $('#confirmed-order-' + orderId); // Assuming you have an ID for the row
                            var button = row.find('.deliver-order'); // Target the button
                            button.hide(); // Hide the button
                            button.replaceWith('<span class="text-success delivered-badge">Delivered</span>'); // Insert the "Delivered" text

                            Swal.fire({
                                title: 'Success!',
                                text: 'Order marked as delivered!',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            });
                        } else {
                            Swal.fire({
                                title: 'Error',
                                text: response.message,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: 'Error',
                            text: 'Error updating order status.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            });


            </script>
            


    
</body>
</html>