@model IEnumerable<SupplierOrderViewModel>

@{
    ViewData["Title"] = "Supplier Orders Management";
}

<div class="container-fluid">
    <h2 class="mb-4" style="color: #3B1E54;">@ViewData["Title"]</h2>

    @if (Model.Any())
    {
        <!-- Pending Orders Section -->
        <div class="card mb-4">
            <div class="card-header" style="background-color: #3B1E54; color: white;">
                <h3 class="mb-0">Pending Orders</h3>
            </div>
            <div class="card-body">
                @if (Model.Any(o => o.orderStatus == "Pending"))
                {
                    <table class="table table-hover table-striped">
                        <thead style="background-color: #f7f7f7; color: #3B1E54;">
                            <tr>
                                <th>Order ID</th>
                                <th>Order Date</th>
                                <th>Branch</th>
                                <th>Total Items</th>
                                <th>Estimated Total</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="pending-orders">
                            @foreach (var order in Model.Where(o => o.orderStatus == "Pending"))
                            {
                                <tr id="order-@order.OrderId" class="align-middle">
                                    <td>@order.OrderId</td>
                                    <td>@order.OrderDate.ToString("MM/dd/yyyy")</td>
                                    <td>@order.BranchName</td>
                                    <td>@order.OrderItems.Count</td>
                                    <td>$@order.OrderItems.Sum(item => item.Total).ToString("F2")</td>
                                    <td>
                                        <div class="d-flex">
                                            <button class="btn btn-info btn-sm me-2 details-order" data-order-id="@order.OrderId">
                                                <i class="fas fa-info-circle"></i> Details
                                            </button>
                                            <button  style="background-color: #3B1E54; color: white;"
                                                    class="btn-sm me-2 accept-order" data-order-id="@order.OrderId">
                                                <i class="fas fa-check"></i> Accept
                                            </button>
                                            <button class="btn btn-danger btn-sm reject-order" data-order-id="@order.OrderId">
                                                <i class="fas fa-times"></i> Reject
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="alert alert-info">No pending orders at the moment.</div>
                }
            </div>
        </div>

        <!-- Confirmed Orders Section -->
        <div class="card mb-4">
            <div class="card-header" style="background-color: #3B1E54; color: white;">
                <h3 class="mb-0">Confirmed Orders</h3>
            </div>
            <div class="card-body">
                @if (Model.Any(o => o.orderStatus == "Confirmed" || o.orderStatus == "Preparing" || o.orderStatus == "Delivered"))
                {
                    <table class="table table-hover table-striped">
                        <thead style="background-color: #f7f7f7; color: #3B1E54;">
                            <tr>
                                <th>Order ID</th>
                                <th>Order Date</th>
                                <th>Pharmacist</th>
                                <th>Branch</th>
                                <th>Total Items</th>
                                <th>Total Price</th>
                                <th>Order Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="confirmed-orders">
                            @foreach (var order in Model.Where(o => o.orderStatus == "Confirmed" || o.orderStatus == "Preparing" || o.orderStatus == "Delivered"))
                            {
                                <tr id="confirmed-order-@order.OrderId" class="align-middle">
                                    <td>@order.OrderId</td>
                                    <td>@order.OrderDate.ToString("MM/dd/yyyy")</td>
                                    <td>@order.PharmacistName</td>
                                    <td>@order.BranchName</td>
                                    <td>@order.OrderItems.Count</td>
                                    <td>$@order.OrderItems.Sum(item => item.Total).ToString("F2")</td>
                                    <td>@order.orderStatus</td>
                                    <td>
                                        <button class="btn btn-info btn-sm details-order" data-order-id="@order.OrderId">
                                            <i class="fas fa-info-circle"></i> Details
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="alert alert-info">No confirmed orders yet.</div>
                }
            </div>
        </div>

        <!-- Rejected Orders Section -->
        <div class="card">
            <div class="card-header" style="background-color: #d9534f; color: white;">
                <h3 class="mb-0">Rejected Orders</h3>
            </div>
            <div class="card-body">
                @if (Model.Any(o => o.orderStatus == "Rejected"))
                {
                    <table class="table table-hover table-striped">
                        <thead style="background-color: #f7f7f7; color: #3B1E54;">
                            <tr>
                                <th>Order ID</th>
                                <th>Order Date</th>
                                <th>Branch</th>
                                <th>Total Items</th>
                                <th>Estimated Total</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="rejected-orders">
                            @foreach (var order in Model.Where(o => o.orderStatus == "Rejected"))
                            {
                                <tr id="rejected-order-@order.OrderId" class="align-middle">
                                    <td>@order.OrderId</td>
                                    <td>@order.OrderDate.ToString("MM/dd/yyyy")</td>
                                    <td>@order.BranchName</td>
                                    <td>@order.OrderItems.Count</td>
                                    <td>$@order.OrderItems.Sum(item => item.Total).ToString("F2")</td>
                                    <td>
                                        <button class="btn btn-info btn-sm details-order btn-outline-dark" data-order-id="@order.OrderId">
                                            Details
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="alert alert-info">No rejected orders.</div>
                }
            </div>
        </div>

        <!-- Order Details Modal -->
        <div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header" style="background-color: #3B1E54; color: white;">
                        <h5 class="modal-title">Order #<span id="modalOrderId"></span> Details</h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <strong>Branch:</strong> <span id="modalBranchName"></span>
                            </div>
                            <div class="col-md-6">
                                <strong>Order Date:</strong> <span id="modalOrderDate"></span>
                            </div>
                        </div>
                        <div id="orderItemsContainer"></div>
                    </div>
                    <div class="modal-footer">
                        <div class="d-flex justify-content-between w-100">
                            <div>
                                <strong>Total Price:</strong> $<span id="modalTotalPrice"></span>
                            </div>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-info">No orders found.</div>
    }

    

    @section Scripts {
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
        <script>
                                $(document).ready(function () {
                var orderDetails = @Json.Serialize(Model.Select(order => new
                {
                    orderId = order.OrderId,
                    branchName = order.BranchName,
                    orderDate = order.OrderDate.ToString("MM/dd/yyyy"),
                    items = order.OrderItems.Select(item => new
                    {
                        name = item.MedicationName,
                        quantity = item.Quantity,
                        total = item.Total
                    }),
                    totalPrice = order.OrderItems.Sum(item => item.Total)
                }));

                // Details Modal Handler
                $('.details-order').on('click', function () {
                    var orderId = $(this).data('order-id');
                    var order = orderDetails.find(o => o.orderId === orderId);

                    $('#modalOrderId').text(orderId);
                    $('#modalBranchName').text(order.branchName);
                    $('#modalOrderDate').text(order.orderDate);
                    $('#modalTotalPrice').text(order.totalPrice.toFixed(2));

                    var itemsHtml = '<table class="table table-bordered"><thead><tr><th>Medication</th><th>Quantity</th><th>Item Total</th></tr></thead><tbody>';
                    order.items.forEach(function (item) {
                        itemsHtml += '<tr>' +
                            '<td>' + item.name + '</td>' +
                            '<td>' + item.quantity + '</td>' +
                            '<td>$' + item.total.toFixed(2) + '</td>' +
                            '</tr>';
                    });
                    itemsHtml += '</tbody></table>';

                    $('#orderItemsContainer').html(itemsHtml);
                    new bootstrap.Modal(document.getElementById('orderDetailsModal')).show();
                });

                           $(document).on('click', '.accept-order', function () {
                var orderId = $(this).data('order-id');
                $.ajax({
                    url: '@Url.Action("AcceptOrder", "Supplier")',
                    type: 'POST',
                    data: { id: orderId },
                    success: function (response) {
                        if (response.success) {
                            $('#order-' + orderId).remove();
                            location.reload(); // Reload to reflect changes
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert('Error accepting the order.');
                    }
                });
            });

                // Reject Order Handler
                $('.reject-order').on('click', function () {
                    var orderId = $(this).data('order-id');
                    $.ajax({
                        url: '@Url.Action("RejectOrder", "Supplier")',
                        type: 'POST',
                        data: { id: orderId },
                        success: function (response) {
                            if (response.success) {
                                $('#order-' + orderId).remove();
                                location.reload(); // Reload to reflect changes
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function () {
                            alert('Error rejecting the order.');
                        }
                    });
                });
            });
        </script>
    }
