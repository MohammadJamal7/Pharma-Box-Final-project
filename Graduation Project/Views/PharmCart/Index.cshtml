@model PharmCart

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>list of medicines</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
    <style>
        @@import url("https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap");

        :root {
            --header-height: 3rem;
            --nav-width: 68px;
            --first-color: #6f42c1;
            --first-color-light: #AFA5D9;
            --white-color: #F7F6FB;
            --body-font: 'Nunito', sans-serif;
            --normal-font-size: 1rem;
            --z-fixed: 100;
        }

        *, ::before, ::after {
            box-sizing: border-box;
        }

        .outlined-purple {
            border: 1px solid #6f42c1;
            color: #5a379d;
        }

            .outlined-purple:hover {
                background-color: #6f42c1;
                color: white;
            }

        body {
            position: relative;
            margin: var(--header-height) 0 0 0;
            padding: 0 1rem;
            font-family: var(--body-font);
            font-size: var(--normal-font-size);
            transition: .5s;
        }

        a {
            text-decoration: none;
        }

        .header {
            width: 100%;
            height: var(--header-height);
            position: fixed;
            top: 0;
            left: 0;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 1rem;
            background-color: var(--white-color);
            z-index: var(--z-fixed);
            transition: .5s;
        }

        .header_toggle {
            color: var(--first-color);
            font-size: 1.5rem;
            cursor: pointer;
        }

        .header_img {
            width: 35px;
            height: 35px;
            display: flex;
            justify-content: center;
            border-radius: 50%;
            overflow: hidden;
        }

            .header_img img {
                width: 40px;
            }

        .l-navbar {
            position: fixed;
            top: 0;
            left: -30%;
            width: var(--nav-width);
            height: 100vh;
            background-color: var(--first-color);
            padding: .5rem 1rem 0 0;
            transition: .5s;
            z-index: var(--z-fixed);
        }

        .nav {
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            overflow: hidden;
        }

        .nav_logo, .nav_link {
            display: grid;
            grid-template-columns: max-content max-content;
            align-items: center;
            column-gap: 1rem;
            padding: .5rem 0 .5rem 1.5rem;
        }

        .nav_logo {
            margin-bottom: 2rem;
        }

        .nav_logo-icon {
            font-size: 1.25rem;
            color: var(--white-color);
        }

        .nav_logo-name {
            color: var(--white-color);
            font-weight: 700;
        }

        .nav_link {
            position: relative;
            color: var(--first-color-light);
            margin-bottom: 1.5rem;
            transition: .3s;
        }

            .nav_link:hover {
                color: var(--white-color);
            }

        .nav_icon {
            font-size: 1.25rem;
        }

        .show {
            left: 0;
        }

        .body-pd {
            padding-left: calc(var(--nav-width) + 1rem);
        }

        .active {
            color: var(--white-color);
        }

            .active::before {
                content: '';
                position: absolute;
                left: 0;
                width: 2px;
                height: 32px;
                background-color: var(--white-color);
            }

        .height-100 {
            height: 100vh;
        }

        .search-bar {
            max-width: 400px;
            margin-bottom: 20px;
        }

        .page-header h5 {
            font-weight: bold;
        }

        .page-header span {
            color: #6c757d;
        }

        .table-container {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .table thead th {
            font-weight: bold;
        }

        .fa-solid {
            color: #B197FC;
            font-size: 1.2rem;
            cursor: pointer;
        }

            .fa-solid:hover {
                color: #600946;
            }
        /* .user-nav {
                                   display: flex;
                                   gap: 1rem;
                               }

                               .user-nav .nav-link {
                                   color: #6c757d;
                                   padding: 0.5rem 1rem;
                                   border-radius: 0.25rem;
                                   transition: all 0.2s;
                               }

                               .user-nav .nav-link:hover {
                                   background-color: #f8f9fa;
                               }

                               .user-nav .nav-link.active {
                                   color: var(--first-color) !important;
                                   font-weight: 500;
                               } */

        @@media screen and (min-width: 768px) {
            body {
                margin: calc(var(--header-height) + 1rem) 0 0 0;
                padding-left: calc(var(--nav-width) + 2rem);
            }

            .header {
                height: calc(var(--header-height) + 1rem);
                padding: 0 2rem 0 calc(var(--nav-width) + 2rem);
            }

            .header_img {
                width: 40px;
                height: 40px;
            }

                .header_img img {
                    width: 45px;
                }

            .l-navbar {
                left: 0;
                padding: 1rem 1rem 0 0;
            }

            .show {
                width: calc(var(--nav-width) + 156px);
            }

            .body-pd {
                padding-left: calc(var(--nav-width) + 188px);
            }
        }
    </style>
</head>
<body id="body-pd">

    <header class="header" id="header">

        <div class="header_toggle"> <i class='bx bx-menu' id="header-toggle"></i> </div>
        <div class="header_img"> <img src="../../MainAssets/logo-color.png" alt=""> </div>
    </header>
    <div class="l-navbar" id="nav-bar">
        <nav class="nav">
            <div>
                <div class="ms-3">
                    <a href="../location-sec/index.html" class="nav_link text-white ps-2">
                        <i class="fa-solid fa-user"></i>
                        <span class="nav_loc-name">Branch Name</span>
                    </a>
                </div>
                <br />
                <div class="nav_list">
                    <a href="../Dashboard-sec/index.html" class="nav_link ">
                        <i class="fa-sharp fa-solid fa-table-columns"></i>
                        <span class="nav_name ">Dashboard</span>

                    </a>
                    <a href="@Url.Action("Inventory","Pharmacist")" class="nav_link ">
                        <i class="fa-solid fa-boxes-stacked"></i>
                        <span class="nav_name">Inventory</span>
                    </a>

                    <a href="@Url.Action("Medications","Pharmacist")" class="nav_link ">
                        <i class="fa-solid fa-grip"></i>
                        <span class="nav_name">Medications</span>
                    </a>
                    <a href="@Url.Action("GroupsOfMedicines","Pharmacist")" class="nav_link">
                        <i class="fa-solid fa-grip"></i>
                        <span class="nav_name">Medicine Groups</span>
                    </a>

                    <a href="@Url.Action("Suppliers","Pharmacist")" class="nav_link">
                        <i class="fa-solid fa-arrow-trend-up"></i>
                        <span class="nav_name">Suppliers</span>
                    </a>
                    <a href="@Url.Action("Orders","Pharmacist")" class="nav_link">
                        <i class="fa-solid fa-arrow-down-9-1"></i>
                        <span class="nav_name"> Orders</span>
                    </a>

                    <a href="@Url.Action("Notifications","Pharmacist")" class="nav_link">
                        <i class="fa-regular fa-bell"></i>
                        <span class="nav_name">Notifications</span>
                    </a>
                    <a href="@Url.Action("Branches","Pharmacist")" class="nav_link ">
                        <i class="fa-solid fa-code-branch"></i>
                        <span class="nav_name">Branchs</span>
                    </a>

                    <a href="@Url.Action("LogOut","Pharmacist")" class="nav_link">
                        <i class="fa-solid fa-right-from-bracket"></i>
                        <span class="nav_name">Log Out</span>
                    </a>

                </div>
            </div>
        </nav>
    </div>


    <div class="container my-5">
        <h2 class="fw-bold">Your Cart </h2>


        @if (Model.CartItems.Any())
        {
            <div class="row">
                <div class="col-12">
                    <div class="table-container">
                        <table class="table table-borderless align-middle">
                    <thead>
                        <tr>
                            <th scope="col">Medicine Name</th>
                            <th scope="col">Price</th>
                            <th scope="col">Quantity</th>
                            <th scope="col">Total</th>
                            <th scope="col">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.CartItems)
                        {
                            <tr>
                                <td>@item.Medication.Name</td>
                                <td>@item.Medication.Price JOD</td>
                                <td>
                                    <input type="number" id="quantity-@item.Id" class="form-control"
                                           value="@item.Quantity" min="1" max="100"
                                           onchange="updateQuantity(@item.Id)" />
                                </td>
                                <td> @(item.Medication.Price * item.Quantity)</td>
                                <td>
                                    <button class="btn btn-danger" onclick="removeFromCart(@item.MedicationId)">Remove</button>
                                </td>
                            </tr>
                        }
                                           </tbody>
                    </table>
                </div>
            </div>
        </div>

            <div class="row mt-4">
                <div class="col-12 text-center">
                    <button class="btn btn-success" onclick="checkout()">Checkout</button>
                    <button class="btn btn-secondary" onclick="clearCart()">Clear Cart</button>
                </div>
            </div>
        }
        else
        {
            <div class="alert alert-info" role="alert">
                Your cart is empty.
            </div>
        }

        <a onclick="Back()" class="btn btn-secondary">Back to Medicines</a>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Include SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.5.0/dist/sweetalert2.min.css" rel="stylesheet" />

    <!-- Include SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.5.0/dist/sweetalert2.min.js"></script>

    <script>


        document.addEventListener("DOMContentLoaded", function (event) {
            const showNavbar = (toggleId, navId, bodyId, headerId) => {
                const toggle = document.getElementById(toggleId),
                    nav = document.getElementById(navId),
                    bodypd = document.getElementById(bodyId),
                    headerpd = document.getElementById(headerId);

                if (toggle && nav && bodypd && headerpd) {
                    toggle.addEventListener('click', () => {
                        nav.classList.toggle('show');
                        toggle.classList.toggle('bx-x');
                        bodypd.classList.toggle('body-pd');
                        headerpd.classList.toggle('body-pd');
                    });
                }
            };

            showNavbar('header-toggle', 'nav-bar', 'body-pd', 'header');

            const linkColor = document.querySelectorAll('.nav_link');

            function colorLink() {
                if (linkColor) {
                    linkColor.forEach(l => l.classList.remove('active'));
                    this.classList.add('active');
                }
            }
            linkColor.forEach(l => l.addEventListener('click', colorLink));

            // Add click handling for user management navigation
            const userNavLinks = document.querySelectorAll('.user-nav .nav-link');
            userNavLinks.forEach(link => {
                link.addEventListener('click', function (e) {
                    userNavLinks.forEach(l => l.classList.remove('active'));
                    this.classList.add('active');
                });
            });
        });

        function Back() {
            window.history.back();
        }

        function removeFromCart(medicationId) {
            // SweetAlert2 confirmation dialog
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to undo this action!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, remove it!',
                cancelButtonText: 'Cancel',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    // Proceed with the AJAX request to remove the item
                    $.ajax({
                        url: '/PharmCart/RemoveFromCart',
                        type: 'POST',
                        data: {
                            medicationId: medicationId,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                location.reload(); // Reload the page to reflect changes
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error details:', xhr.responseText);
                            alert("An error occurred while removing the item.");
                        }
                    });
                }
            });
        }

        function updateQuantity(cartItemId) {
            var quantity = document.getElementById('quantity-' + cartItemId).value;

            if (quantity <= 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Quantity must be greater than 0.'
                });
                return;
            }

            $.ajax({
                url: '/PharmCart/UpdateQuantity',
                type: 'POST',
                data: {
                    cartItemId: cartItemId,
                    quantity: quantity,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    if (response.success) {
                        location.reload(); // Reload the page to reflect changes
                    } else {
                        alert(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error details:', xhr.responseText);
                    alert("An error occurred while updating the quantity.");
                }
            });
        }

        function clearCart() {
            // SweetAlert2 confirmation dialog
            Swal.fire({
                title: 'Are you sure?',
                text: "This will clear your entire cart!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, clear it!',
                cancelButtonText: 'Cancel',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    // Proceed with the AJAX request to clear the cart
                    $.ajax({
                        url: '/PharmCart/ClearCart',
                        type: 'POST',
                        data: {
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                location.reload(); // Reload the page to clear the cart
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error details:', xhr.responseText);
                            alert("An error occurred while clearing the cart.");
                        }
                    });
                }
            });
        }

        function checkout() {
            // SweetAlert2 confirmation dialog before checkout
            Swal.fire({
                title: 'Proceed to Checkout?',
                text: "Please review your cart before proceeding.",
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Yes, checkout!',
                cancelButtonText: 'Cancel',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    // Proceed with the AJAX request to checkout
                    $.ajax({
                        url: '/PharmCart/Checkout',
                        type: 'POST',
                        data: {
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                              success: function (response) {
            if (response.success) {
                // Show the success Swal alert
                Swal.fire({
                    icon: 'success',
                    title: 'Checkout Successful',
                    text: 'Your order has been placed successfully!'
                }).then(function() {
                    // Wait for 1 second (1000 milliseconds) after the alert closes, then reload the page
                    setTimeout(function() {
                        location.reload(); // Reload the page after the delay
                    }, 500);
                });
            } else {
                alert(response.message);
            }
        },

                        error: function (xhr, status, error) {
                            console.error('Error details:', xhr.responseText);
                            alert("An error occurred during checkout.");
                        }
                    });
                }
            });
        }
    </script>
    @Html.AntiForgeryToken()
</body>
</html>
